<?xml version="1.0"?>
<launch>
<!-- Gazebo options -->
	<arg name="gazebo_gui" default="true" doc="Start Gazebo GUI"/>
	<arg name="paused" default="false" doc="Start Gazebo paused"/>
	<arg name="debug" default="false" />
	<arg name="world_name" default="$(find my_simulations)/world/warehouse_world.world"  doc="Gazebo world file"/>
	<arg name="world_pose" default="-x 0 -y 0 -z 0 -R 0 -P 0 -Y 0" doc="Pose to spawn the robot at"/>
	<arg name="initial_joint_positions" default=" -J f_joint1 0 -J f_joint2 0 -J joint1 0 -J joint2 0 -J joint3 0 -J joint4 0 -J joint5 0 -J joint6 0 -J left_wheel_hinge 0 -J right_wheel_hinge 0 " doc="Initial joint configuration of the robot"/>
    <arg name="use_ekf" default="false"/>
    <arg name="use_sim_time" value="true" />
    <arg name="use_clock_frequency" default="false"/>
    <arg name="pub_clock_frequency" default="100"/>

        <!-- include gazebo_ros launcher -->
        <!-- Start Gazebo paused to allow the controllers to pickup the initial pose-->
	<include file="$(find gazebo_ros)/launch/empty_world.launch" pass_all_args="true">
		<arg name="paused" value="true"/>
                <arg name="world_name" value="$(arg world_name)" />
                <arg name="debug" value="$(arg debug)" />
                <arg name="gui" value="$(arg gazebo_gui)" /> <!-- \gazebo -->
                <arg name="paused" value="$(arg paused)" />
                <arg name="use_sim_time" value="use_sim_time" /> <!-- \clock -->
	</include>

<!-- Load joint controller configurations from YAML file to parameter server-->
    <rosparam file="$(find robot_2)/config/gazebo_controllers.yaml"  command="load" />
    <rosparam file="$(find robot_2)/config/ros_controllers.yaml" command="load" />

<!-- Set the robot urdf on the parameter server -->
	<param name="robot_description" textfile="$(find my_simulations)/models/urdf/mixed_robot.urdf" />

<!-- Load Joint State Publisher-->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"
        respawn="false" output="screen">
        <param name="use_gui" value="false"/>
  </node>
<!-- convert joint states to TF transforms for rviz, etc-->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"
        respawn="false" output="screen">
    </node>


<!-- Unpause the simulation after loading the robot model -->
	<arg name="unpause" value="$(eval '' if arg('paused') else '-unpause')" />

    <node if="$(arg use_ekf)" name="ekf" pkg="robot_localization" type="ekf_localization_node" output="screen">
      <rosparam command="load" file="$(find robot_2)/params/ekf_params.yaml"/>
      <param if="$(eval namespace != '/')" name="map_frame" value="$(arg namespace)/map"/>
      <param if="$(eval namespace != '/')" name="odom_frame" value="$(arg namespace)/odom"/>
      <param if="$(eval namespace != '/')" name="base_link_frame" value="$(arg namespace)/base_footprint"/>
      <param if="$(eval namespace != '/')" name="world_frame" value="$(arg namespace)/odom"/>
      <param name="odom0" value="raw_odom"/>
      <param name="imu0" value="imu/data"/>
      <remap from="odometry/filtered" to="odom"/>
    </node>

<!-- Load joint controller configurations from YAML file to parameter server-->
    <include file="$(dirname)/ros_controllers.launch"/>

<!-- Spawn the robot in Gazebo -->
	<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model"  respawn="false" output="screen"
	 args="-urdf -param robot_description
	 -model mixed_robot $(arg unpause) $(arg world_pose) $(arg initial_joint_positions)" />

<!-- Spawn the Gazebo ROS controllers we will load later
	<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
	output="screen" args="joint_state_controller diff_drive_controller
	gripper_controller_effort arm_controller_pos mobile_controller_velocity " />
-->


</launch>

