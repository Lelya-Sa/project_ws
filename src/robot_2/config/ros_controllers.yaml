mixed_robot:
  gripper_controller_effort:
    type: effort_controllers/JointTrajectoryController
    joints:
      - f_joint1
      - f_joint2
    gains:
      f_joint1:
        p: 100
        d: 1
        i: 1
        i_clamp: 1
      f_joint2:
        p: 100
        d: 1
        i: 1
        i_clamp: 1

  arm_controller_pos:
    type: position_controllers/JointTrajectoryController
    joints:
      - joint1
      - joint2
      - joint3
      - joint4
      - joint5
      - joint6
    gains:
      joint1:
        p: 1.0
        d: 1.0
        i: 0.0
        i_clamp: 1
      joint2:
        p: 1.0
        d: 1.0
        i: 0.0
        i_clamp: 1
      joint3:
        p: 1.0
        d: 1.0
        i: 0.0
        i_clamp: 1
      joint4:
        p: 1.0
        d: 1.0
        i: 0.0
        i_clamp: 1
      joint5:
        p: 1.0
        d: 1.0
        i: 0.0
        i_clamp: 1
      joint6:
        p: 1.0
        d: 1.0
        i: 0.0
        i_clamp: 1

#  mobile_controller_velocity:
#    type: velocity_controllers/JointTrajectoryController
#    joints:
#      - left_wheel_hinge
#      - right_wheel_hinge
#    gains:
#      left_wheel_hinge:
#        p: 100
#        d: 1
#        i: 1
#        i_clamp: 1
#      right_wheel_hinge:
#        p: 100
#        d: 1
#        i: 1
#        i_clamp: 1


  diff_drive_controller:
    type: diff_drive_controller/DiffDriveController
    publish_rate: 50

    left_wheel: ['left_wheel_hinge']
    right_wheel: ['right_wheel_hinge']

    wheel_separation: 0.43
    wheel_radius : 0.08

     #Wheel separation and radius multipliers
    wheel_separation_multiplier: 1.0 # default: 1.0
    wheel_radius_multiplier    : 1.0 # default: 1.0

     #Velocity commands timeout [s], default 0.5
    cmd_vel_timeout: 0.25
     #Odometry covariances for the encoder output of the robot. These values should
     #be tuned to your robot's sample odometry data, but these values are a good place
     #to start
    pose_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]
    twist_covariance_diagonal: [0.001, 0.001, 0.001, 0.001, 0.001, 0.03]

     #Top level frame (link) of the robot description
    base_frame_id: robot_footprint
    odom_frame_id: odom
    open_loop: true
    enable_odom_tf: true
     #Velocity and acceleration limits for the robot
    linear:
      x:
        has_velocity_limits    : true
        max_velocity           : 1.0  # m/s
        min_velocity           : -1.0 # m/s
        has_acceleration_limits: true
        max_acceleration       : 1.0  # m/s^2
        has_jerk_limits        : false
        max_jerk               : 5.0  # m/s^3
        min_jerk               : 0.0
    angular:
      z:
        has_velocity_limits    : true
        max_velocity           : 1.0  # rad/s
        min_velocity           : -1.0
        has_acceleration_limits: true
        max_acceleration       : 1.5  # rad/s^2
        min_acceleration       : -1.0 # m/s^2
        has_jerk_limits        : false
        max_jerk               : 0  # rad/s^3
        min_jerk               : 0.0
